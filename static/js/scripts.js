// === –í–∏–ø–∞–¥–∞—é—á–µ –º–µ–Ω—é –ø—Ä–æ—Ñ—ñ–ª—é (index.html) ===
function toggleMenu() {
    document.getElementById("dropdown").classList.toggle("show");
  }
  
  window.addEventListener('click', function(event) {
    if (!event.target.closest('.profile-menu')) {
      document.getElementById("dropdown").classList.remove('show');
    }
  });

  // === –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫ –≤ –ø—Ä–æ—Ñ—ñ–ª—ñ (profile.html) ===
document.addEventListener('DOMContentLoaded', function() {
    const tabs = document.querySelectorAll('.tab-button');
    const contents = document.querySelectorAll('.tab-content');
  
    tabs.forEach(btn => {
      btn.addEventListener('click', () => {
        tabs.forEach(b => b.classList.remove('active'));
        btn.classList.add('active');
        contents.forEach(c => c.style.display = 'none');
        document.getElementById(btn.dataset.tab).style.display = 'block';
      });
    });
  
    // –ü—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–µ—Ä—à—É –≤–∫–ª–∞–¥–∫—É
    if (tabs.length > 0 && contents.length > 0) {
      tabs[0].classList.add('active');
      contents.forEach((content, index) => {
        content.style.display = (index === 0) ? 'block' : 'none';
      });
    }
  });
  
 
  // === –õ–æ–≥—ñ–∫–∞ –≤–∏–±–æ—Ä—É —Ç–∏–ø—É –ø—Ä–æ–¥—É–∫—Ç—É —ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ (request.html) ===
function showForm(type) {
    document.getElementById('user_choice').style.display = 'none';
    document.getElementById('new_user_form').style.display = (type === 'new') ? 'block' : 'none';
    document.getElementById('login_form').style.display = (type === 'existing') ? 'block' : 'none';
  }
  
  function showOptions() {
    const t = document.getElementById('product_type').value;
    document.getElementById('website_options').style.display = t === 'website' ? 'block' : 'none';
    document.getElementById('app_options').style.display = t === 'app' ? 'block' : 'none';
    document.getElementById('bot_options').style.display = t === 'bot' ? 'block' : 'none';
    document.getElementById('site_type_block').style.display = t === 'website' ? 'block' : 'none';
    if (t !== 'website') {
      document.getElementById('site_type').value = '';
    }
    calculateComplexity();
  }
  
  function calculateComplexity() {
    let score = 0;
    const t = document.getElementById('product_type').value;
    if (t === 'website') {
      if (document.getElementById('pages').value === '3+') score += 2;
      if (document.getElementById('admin_panel').value === '1') score += 2;
      if (document.getElementById('auth').value === '1') score += 1;
    }
    if (t === 'app') {
      if (document.getElementById('platform').value === 'both') score += 2;
      if (document.getElementById('login').value === '1') score += 1;
      if (document.getElementById('user_profile').value === '1') score += 2;
    }
    if (t === 'bot') {
      if (document.getElementById('bot_commands').value === 'many') score += 2;
      if (document.getElementById('bot_payments').value === '1') score += 2;
      if (document.getElementById('bot_database').value === '1') score += 1;
    }
    let c = 'low';
    if (score >= 3 && score < 5) c = 'medium';
    if (score >= 5) c = 'high';
    document.getElementById('complexity').value = c;
  }
  
  document.addEventListener('DOMContentLoaded', function () {
    const optionButtons = document.querySelectorAll('.option-btn');
  
    optionButtons.forEach(button => {
      button.addEventListener('click', () => {
        button.classList.toggle('active');
        const targetId = button.dataset.target;
        const targetInput = document.getElementById(targetId);
        if (targetInput) {
          const newValue = targetInput.value === '1' ? '0' : '1';
          targetInput.value = newValue;
          calculateComplexity();
        }
      });
    });
  });
// scripts.js (–¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –∫–æ–¥ –¥–ª—è multi-step —Ñ–æ—Ä–º–∏)


let currentStep = 0;
const steps = document.querySelectorAll('.form-step');
const nextBtn = document.getElementById('nextBtn');
const prevBtn = document.getElementById('prevBtn');
const submitBtn = document.getElementById('submitBtn');

function showStep(step) {
  steps.forEach((el, idx) => {
    el.classList.toggle('active', idx === step);
  });
  prevBtn.style.display = step === 0 ? 'none' : 'inline-block';
  nextBtn.style.display = step === steps.length - 1 ? 'none' : 'inline-block';
  submitBtn.style.display = step === steps.length - 1 ? 'inline-block' : 'none';

  if (step === steps.length - 1) {
    fillPreview();
  }
}

function nextStep() {
  const currentFormStep = steps[currentStep];
  const inputs = currentFormStep.querySelectorAll('input, select, textarea');

  for (const input of inputs) {
    if (!input.checkValidity()) {
      input.reportValidity();
      return;
    }
  }

  if (currentStep < steps.length - 1) {
    currentStep++;
    showStep(currentStep);
  }
}

function prevStep() {
  if (currentStep > 0) {
    currentStep--;
    showStep(currentStep);
  }
}

function fillPreview() {
  const preview = document.getElementById('previewArea');
  const form = document.getElementById('requestForm');
  const formData = new FormData(form);

  const getValue = (key) => formData.get(key) || '-';
  const badges = [];

  if (getValue('product_type') === 'website') {
    if (getValue('admin_panel') === '1') badges.push('–ê–¥–º—ñ–Ω–ø–∞–Ω–µ–ª—å');
    if (getValue('auth') === '1') badges.push('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è');
  }
  if (getValue('product_type') === 'app') {
    if (getValue('login') === '1') badges.push('–í—Ö—ñ–¥ —É —Å–∏—Å—Ç–µ–º—É');
    if (getValue('user_profile') === '1') badges.push('–ü—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
  }
  if (getValue('product_type') === 'bot') {
    if (getValue('bot_database') === '1') badges.push('–Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ –±–∞–∑–æ—é');
    if (getValue('bot_payments') === '1') badges.push('–ü—Ä–∏–π–æ–º –ø–ª–∞—Ç–µ–∂—ñ–≤');
  }

  preview.innerHTML = `
    <div class="preview-card">
      <h3>üìã –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∞—à—É –∑–∞—è–≤–∫—É:</h3>
      <div class="preview-item"><span>üë§</span> <strong>–Ü–º‚Äô—è:</strong> ${getValue('name')}</div>
      <div class="preview-item"><span>üìß</span> <strong>Email:</strong> ${getValue('email')}</div>
      <div class="preview-item"><span>üîß</span> <strong>–¢–∏–ø –ø—Ä–æ–¥—É–∫—Ç—É:</strong> ${getValue('product_type')}</div>
      ${getValue('product_type') === 'website' ? `
        <div class="preview-item"><span>üåê</span> <strong>–¢–∏–ø —Å–∞–π—Ç—É:</strong> ${getValue('site_type')}</div>
        <div class="preview-item"><span>üìÑ</span> <strong>–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫:</strong> ${getValue('pages')}</div>
      ` : ''}
      ${getValue('product_type') === 'app' ? `
        <div class="preview-item"><span>üì±</span> <strong>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:</strong> ${getValue('platform')}</div>
      ` : ''}
      ${getValue('product_type') === 'bot' ? `
        <div class="preview-item"><span>ü§ñ</span> <strong>–ö-—Å—Ç—å –∫–æ–º–∞–Ω–¥:</strong> ${getValue('bot_commands')}</div>
      ` : ''}
      ${badges.length > 0 ? `
        <div class="preview-item"><span>üõ†Ô∏è</span> <strong>–î–æ–¥–∞—Ç–∫–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:</strong>
          <div class="preview-badges">
            ${badges.map(text => `<span class="preview-badge">${text}</span>`).join('')}
          </div>
        </div>
      ` : ''}
      <div class="preview-item"><span>üìÉ</span> <strong>–û–ø–∏—Å:</strong> ${getValue('description')}</div>
      <div class="preview-item"><span>‚è∞</span> <strong>–ß–∞—Å –¥–ª—è –∑–≤'—è–∑–∫—É:</strong> ${getValue('contact_time')}</div>
    </div>
  `;
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫
if (document.getElementById('requestForm')) {
  showStep(currentStep);

  document.getElementById('requestForm').addEventListener('submit', function(e) {
    console.log('–§–æ—Ä–º–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç—å—Å—è...');
  });
} 


