from flask import Blueprint, render_template, request, redirect, session
from datetime import datetime, timedelta
import sqlite3
from flask_mail import Message
from app import mail
import os

bp = Blueprint('main', __name__)

@bp.route('/')
def home():
    return render_template('index.html')


@bp.route('/request', methods=['GET', 'POST'])
def request_form():
    user_name = ""
    user_email = ""

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ª–æ–≥—ñ–Ω–µ–Ω–∏–π, –≤–∏—Ç—è–≥—É—î–º–æ –π–æ–≥–æ –¥–∞–Ω—ñ
    if 'user_id' in session:
        conn = sqlite3.connect('database.db')
        cursor = conn.cursor()
        cursor.execute('SELECT username, email FROM users WHERE id=?', (session['user_id'],))
        user = cursor.fetchone()
        conn.close()
        if user:
            user_name = user[0]
            user_email = user[1]

    if request.method == 'POST':
        name = request.form['name']
        email = request.form['email']
        description = request.form['description']
        complexity = request.form['complexity']

        if complexity == 'low':
            estimated_time = '1-2 –¥–Ω—ñ'
            estimated_cost = 100
        elif complexity == 'medium':
            estimated_time = '3-5 –¥–Ω—ñ–≤'
            estimated_cost = 300
        else:
            estimated_time = '7+ –¥–Ω—ñ–≤'
            estimated_cost = 600

        meeting_date = (datetime.now() + timedelta(days=1)).strftime("%d.%m.%Y")

        # –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏
        conn = sqlite3.connect('database.db')
        cursor = conn.cursor()
        cursor.execute('''
            INSERT INTO requests (name, email, description, complexity, estimated_time, estimated_cost, meeting_date)
            VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', (name, email, description, complexity, estimated_time, estimated_cost, meeting_date))
        conn.commit()
        conn.close()

        # –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ª–∏—Å—Ç–∞ –∑ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è–º
        try:
            msg = Message(
                "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏",
                sender=os.getenv('MAIL_DEFAULT_SENDER'),
                recipients=[email]
            )
            msg.body = f"""
–î—è–∫—É—î–º–æ, {name}!

–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø—ñ—à–Ω–æ –ø—Ä–∏–π–Ω—è—Ç–∞. –û—á—ñ–∫—É–π—Ç–µ –¥–∑–≤—ñ–Ω–æ–∫ –≤—ñ–¥ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–∞ {meeting_date}.

üõ†Ô∏è –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å: {complexity}
‚è±Ô∏è –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: {estimated_time}
üí∞ –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: {estimated_cost} –≥—Ä–Ω

–ó –ø–æ–≤–∞–≥–æ—é,
IT-–∫–æ–º–ø–∞–Ω—ñ—è
"""
            mail.send(msg)
        except Exception as e:
            print("–ü–æ–º–∏–ª–∫–∞ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è email:", e)

        return render_template(
            'confirmation.html',
            name=name,
            estimated_time=estimated_time,
            estimated_cost=estimated_cost,
            meeting_date=meeting_date,
            complexity=complexity
        )

    return render_template('request.html', user_name=user_name, user_email=user_email)
